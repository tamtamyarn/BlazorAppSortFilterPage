@page "/"
@using BlazorApp3.Shared.Wrappers
@inject HttpClient Http

@if (response == null || authors == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>
        <Select DefaultValue=@("id") Style="width:120px" @bind-Value="@sortBy">
            <SelectOption Value="id">ID</SelectOption>
            <SelectOption Value="title">Title</SelectOption>
            <SelectOption Value="author">Author</SelectOption>
            <SelectOption Value="publication">Publication</SelectOption>
        </Select>
        <RadioGroup @bind-Value="isDesc" ButtonStyle="solid">
            <Radio RadioButton Value="@("false")">Asc</Radio>
            <Radio RadioButton Value="@("true")">Desc</Radio>
        </RadioGroup>
        <Select DefaultValue=@("10") Style="width:120px" @bind-Value="@pageSize">
            <SelectOption Value="10">10</SelectOption>
            <SelectOption Value="30">30</SelectOption>
            <SelectOption Value="50">50</SelectOption>
            <SelectOption Value="100">100</SelectOption>
        </Select>
        <Select DefaultValue=@("all") Style="width:240px" @bind-Value="@author">
            <SelectOption Value="all">All</SelectOption>
            @foreach (var author in authors)
            {
                <SelectOption Value="@author">@author</SelectOption>
            }
        </Select>
        <Button OnClick="@UpdateBookListAsync">Update</Button>
    </p>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Author</th>
                <th>Publication</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in response.Books)
            {
                <tr>
                    <td>@book.BookId</td>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.Publication</td>
                </tr>
            }
        </tbody>
    </table>

    <p><Pagination @bind-PageIndex="@pageNumber" PageSize="@int.Parse(pageSize)" Total="@response.TotalRecords" OnPageIndexChange="@ChangePageAsync"></Pagination></p>
}


@code {
    private Response response;

    private int pageNumber = 1;

    private string pageSize = "10";

    private string sortBy = "ID";

    private string isDesc = "false";

    private List<string> authors;

    private string author = "all";

    protected override async Task OnInitializedAsync()
    {
        await this.UpdateBookListAsync();
        authors = await Http.GetFromJsonAsync<List<string>>($"api/Authors");
    }

    private async Task ChangePageAsync()
    {
        await this.UpdateBookListAsync();
    }

    private async Task UpdateBookListAsync()
    {
        response = await Http.GetFromJsonAsync<Response>($"api/Books?pagenumber={pageNumber}&pagesize={pageSize}&sortby={sortBy}&desc={isDesc}&author={author}");
    }
}
